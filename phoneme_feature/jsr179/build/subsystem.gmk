#
# Copyright  1990-2008 Sun Microsystems, Inc. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version
# 2 only, as published by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License version 2 for more details (a copy is
# included at /legal/license.txt).
# 
# You should have received a copy of the GNU General Public License
# version 2 along with this work; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, CA 95054 or visit www.sun.com if you need additional
# information or have any questions.
#
######################################################################
#
# Module's Component Configuration file
#
# Remember: It is up to the module itself to impose rules of
# how to compile the options. All the global Makefile needs
# is the final def. of Java and native file lists and some
# other def. (like VPATH)
#
######################################################################

# Adds to global SUBSYSTEMS list
#
SUBSYSTEMS += jsr179

ifeq ($(TARGET_VM),cldc_vm)
JSR_179_PLATFORM = cldc_application
else
JSR_179_PLATFORM = cdc_share
endif 

# Abstractions component is used
USE_ABSTRACTIONS=true

# Build configuration options for choosing implementations
# Currently supported values: java | platform
#
JSR_179_STORE_IMPL = platform
#JSR_179_STORE_IMPL = java
#JSR_179_ATAN2_IMPL = platform
JSR_179_ATAN2_IMPL = java

# Javadoc source path
JSR_179_SOURCEPATH = \
    $(JSR_179_DIR)/src/share/common/classes \
    $(JSR_179_DIR)/src/share/java_global/classes \
    $(JSR_179_DIR)/src/share/platform_global/classes \
    $(JSR_179_DIR)/src/$(JSR_179_PLATFORM)/java_global/classes \

JSR_179_PACKAGES = \
    com.sun.j2me.location \
    javax.microedition.location

JAVADOC_ALL_SOURCEPATH += $(JSR_179_SOURCEPATH)
JAVADOC_ALL_PACKAGES +=  $(JSR_179_PACKAGES)

GROUP_DOC_ALL += \
        -group "JSR179 Location" \
	$(shell echo $(JSR_179_PACKAGES) | tr ' ' $(PATHSEP))

JSR_179_LIB_NAME        = jsr179
JSR_179_BUILD_DIR       = $(JSROP_BUILD_DIR)/$(JSR_179_LIB_NAME)
ifeq ($(TARGET_VM),cldc_vm)
JSR_179_GENERATED_DIR   = $(GENERATED_DIR)
else
JSR_179_GENERATED_DIR   = $(JSR_179_BUILD_DIR)/generated
endif

$(JSR_179_GENERATED_DIR)/classes/com/sun/j2me/location/PlatformLocationProvider.java: \
  $(JSR_179_DIR)/src/share/common/classes/com/sun/j2me/location/PlatformLocationProvider.jpp
	@$(call runjpp,$^,$@)

# Java files for the ( jsr179 ) module
#
MODULE_JSR_179_JAVA_FILES = \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/LandmarkException.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/AddressInfo.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/Coordinates.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/Criteria.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/Landmark.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/LocationException.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/LandmarkStore.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/Location.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/QualifiedCoordinates.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/LocationListener.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/LocationProvider.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/Orientation.java \
	$(JSR_179_DIR)/src/share/common/classes/javax/microedition/location/ProximityListener.java \
	$(JSR_179_DIR)/src/share/common/classes/com/sun/j2me/location/LocationProviderImpl.java \
        $(JSR_179_GENERATED_DIR)/classes/com/sun/j2me/location/PlatformLocationProvider.java \
	$(JSR_179_DIR)/src/share/common/classes/com/sun/j2me/location/LocationImpl.java \
	$(JSR_179_DIR)/src/share/common/classes/com/sun/j2me/location/ProximityNotifier.java \
	$(JSR_179_DIR)/src/share/common/classes/com/sun/j2me/location/OrientationProvider.java \
	$(JSR_179_DIR)/src/share/common/classes/com/sun/j2me/location/Util.java

# Java files for the Landmark sub-system
#
ifeq ($(JSR_179_STORE_IMPL), platform)
MODULE_JSR_179_JAVA_FILES += \
 $(JSR_179_DIR)/src/share/platform_global/classes/com/sun/j2me/location/LocationPersistentStorage.java \
 $(JSR_179_DIR)/src/share/platform_global/classes/com/sun/j2me/location/LandmarkImpl.java 
 vpath locationPersistentStorage_kni.c $(JSR_179_DIR)/src/share/platform_global/native
 MODULE_JSR_179_NATIVE_FILES += \
     locationPersistentStorage_kni.c
else
ifeq ($(TARGET_VM),cldc_vm)
MODULE_JSR_179_JAVA_FILES += \
 $(JSR_179_DIR)/src/$(JSR_179_PLATFORM)/java_global/classes/com/sun/j2me/location/LocationPersistentStorage.java \
 $(JSR_179_DIR)/src/share/java_global/classes/com/sun/j2me/location/LandmarkImpl.java 
endif
endif

# CNI classes
SUBSYSTEM_JSR_179_CNI_CLASSES = \
    javax.microedition.location.Coordinates \
    com.sun.j2me.location.LandmarkImpl \
    com.sun.j2me.location.LocationInfo \
    com.sun.j2me.location.LocationProviderInfo \
    com.sun.j2me.location.LocationPersistentStorage \
    com.sun.j2me.location.PlatformLocationProvider \
    com.sun.j2me.location.LocationMath \
    com.sun.j2me.location.OrientationProvider \
    com.sun.j2me.location.OrientationInfo

# Files for atan2 implementation
#
ifeq ($(JSR_179_ATAN2_IMPL),platform)
MODULE_JSR_179_JAVA_FILES += \
 $(JSR_179_DIR)/src/share/platform_global/classes/com/sun/j2me/location/LocationMath.java 
 vpath jsr179_math_kni.c $(JSR_179_DIR)/src/share/platform_global/native
MODULE_JSR_179_NATIVE_FILES += \
    jsr179_math_kni.c
else
MODULE_JSR_179_JAVA_FILES += \
 $(JSR_179_DIR)/src/$(JSR_179_PLATFORM)/java_global/classes/com/sun/j2me/location/LocationMath.java 
ifeq ($(TARGET_VM),cldc_vm) 
vpath % $(JSR_179_DIR)/src/$(JSR_179_PLATFORM)/java_global/native/math
MODULE_JSR_179_NATIVE_FILES += \
    jsr179_math_kni.c \
    e_atan2.c \
    s_atan.c 
SUBSYSTEM_JSR_179_EXTRA_INCLUDES = \
    -I$(JSR_179_DIR)/src/$(JSR_179_PLATFORM)/java_global/native/math 
endif
endif

vpath % $(JSR_179_DIR)/src/$(JSR_179_PLATFORM)/common/native
MODULE_JSR_179_NATIVE_FILES += \
    jsr179_locationProvider_kni.c

SUBSYSTEM_JSR_179_NATIVE_FILES = \
    $(MODULE_JSR_179_NATIVE_FILES)

# Determines what option we have made and set it
# to some variable that global makefile recognize
#
SUBSYSTEM_JSR_179_JAVA_FILES   = \
    $(MODULE_JSR_179_JAVA_FILES)

# Internal paths for jsr 179 module
#
INTERNAL_JSR_179_CONFIG_DIR= $(JSR_179_DIR)/src/share/config

# Include JSR_135 system properties in Configuration
JSR_179_PROPERTY_FILES = \
    $(INTERNAL_JSR_179_CONFIG_DIR)/common/properties_jsr179.xml

SUBSYSTEM_CONFIGURATION_INPUT_FILES += \
    $(JSR_179_PROPERTY_FILES)

JTWI_NATIVE_FILES	+= $(SUBSYSTEM_JSR_179_NATIVE_FILES)
EXTRA_INCLUDES		+= $(SUBSYSTEM_JSR_179_EXTRA_INCLUDES)

# Specify romizer configuration file for the jsr
# and path where the file is located
#
ROMGEN_INCLUDE_PATHS += $(JSR_179_DIR)/src/share/config
ROMGEN_CFG_FILES     += jsr179_rom.cfg

ifeq ($(TARGET_VM),cldc_vm)
JSR_179_JAR             = $(JSROP_LIB_DIR)/$(JSR_179_LIB_NAME).jar
else
JSR_179_JAR             = $(JSROP_JAR_DIR)/$(JSR_179_LIB_NAME).jar
endif
JSR_179_NATIVE_LIB       = $(JSROP_LIB_DIR)/$(LIB_PREFIX)$(JSR_179_LIB_NAME)$(LIB_POSTFIX)
JSR_179_NATIVE_OBJS      = $(patsubst %.c,$(JSROP_OBJ_DIR)/%.o,$(SUBSYSTEM_JSR_179_NATIVE_FILES))
JSR_179_INIT_PACKAGE    = $(JSR_INIT_PACKAGE).jsr179

JSROP_NATIVE_OBJS    += $(JSR_179_NATIVE_OBJS)
JSROP_CNI_CLASSES    += $(SUBSYSTEM_JSR_179_CNI_CLASSES)
JSROP_NATIVE_LIBS    += $(JSR_179_NATIVE_LIB)
JSROP_INCLUDE_DIRS   += $(SUBSYSTEM_JSR_179_INCLUDE_DIRS)

JPP_DEFS             += -DENABLE_JSR_179

CVM_INCLUDE_JAVACALL  = true

#
# Add Autogenerated Initializer
# 
ifeq ($(TARGET_VM), cdc_vm)
CVM_DEFINES          += -DENABLE_CDC=1

JSR_179_INIT_PACKAGE  = $(JSR_INIT_PACKAGE).jsr179
JSR_179_INITIALIZER   = $(JSR_179_GENERATED_DIR)/classes/$(subst .,/,$(JSR_179_INIT_PACKAGE))/$(JSR_INIT_CLASS).java

JSR_INITIALIZER_LIST += $(JSR_179_INIT_PACKAGE).$(JSR_INIT_CLASS)

SUBSYSTEM_JSR_179_JAVA_FILES += \
    $(JSR_179_INITIALIZER)
$(JSR_179_INITIALIZER): $(CONFIGURATOR_JAR_FILE)
	$(AT)$(call generateJSRInitializer,$(JSR_179_PROPERTY_FILES),$(JSR_179_GENERATED_DIR),$(JSR_179_INIT_PACKAGE),$@,$(JSR_179_LIB_NAME))
endif


$(JSR_179_JAR): $(SUBSYSTEM_JSR_179_JAVA_FILES)
	$(call compileJSRClasses,179)

JSROP_JAVACALL_DEPENDENTS += $(JSR_179_NATIVE_OBJS)

$(JSR_179_NATIVE_LIB): $(JSR_179_NATIVE_OBJS) $(ABSTRACTIONS_NATIVE_LIBRARY)
	@echo "Linking $@"
	$(AT)$(call makeSharedLibrary, $(JSR_179_NATIVE_OBJS))

# Append JSR 179 source bundle creation to target
source_bundle:: jsr_179_source_bundle

jsr179_nativelib: $(JSR_179_NATIVE_LIB)

# Create JSR 179 source in subdir 'jsr179/'
JSR_179_SOURCE_OUTPUT_DIR=$(SOURCE_OUTPUT_DIR)/jsr179

# Copy and filter JSR 179 source in JSR_179_SOURCE_OUTPUT_DIR
jsr_179_source_bundle: $(JSR_179_DIR)
	@echo " ... JSR 179 source bundle" $(LOG)
	$(AT)$(call source_bundle_filter,$(JSR_179_DIR),$(JSR_179_SOURCE_OUTPUT_DIR),src/$(JSR_179_PLATFORM) src/share build)

ifneq ($(TARGET_VM),cdc_vm)
$(MIDP_CLASSES_ZIP):: $(SUBSYSTEM_JSR_179_JAVA_FILES)
	$(appendjavafiles)

all:: jsr_179_all

# We have to create 'landmarkstores' directory for saving landmarks
# to the persistent storage.
jsr_179_all:
ifeq ($(JSR_179_STORE_IMPL), java)
	@mkdir -p $(MIDP_OUTPUT_DIR)/appdb/landmarkstores
endif
endif
EXTRA_CFLAGS += -DENABLE_JSR_179=1
