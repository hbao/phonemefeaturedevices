#
# Copyright  1990-2008 Sun Microsystems, Inc. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version
# 2 only, as published by the Free Software Foundation. 
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License version 2 for more details (a copy is
# included at /legal/license.txt). 
# 
# You should have received a copy of the GNU General Public License
# version 2 along with this work; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA 
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, CA 95054 or visit www.sun.com if you need additional
# information or have any questions. 
#
######################################################################
#
# Module's Component Configuration file
#
# Remember: It is up to the module itself to impose rules of
# how to compile the options. All the global Makefile needs
# is the final def. of Java and native file lists and some
# other def. (like VPATH)
#
######################################################################

JSR_75_GENERATED_DIR = $(GENERATED_DIR)

# Include common definitions
#
include $(JSR_75_DIR)/build/share/common.gmk

# Generate doxygen for the following native sources
#
DOXYGEN_INPUT_LIST += \
 $(JSR_75_CLDC_APP_DIR)/native/share/inc/midpNativeMounts.h \
 $(JSR_75_CLDC_APP_DIR)/native/share/inc/jsr75_pim.h \
 $(JSR_75_CLDC_APP_DIR)/native/share/inc/fcCleanup.h \
 $(JSR_75_CLDC_APP_DIR)/native/share/midpSupportedDisks.h 

# Javadoc source path
JSR_75_SOURCEPATH=$(JSR_75_SHARE_DIR)/classes$(PATHSEP)$(JSR_75_CLDC_APP_DIR)/classes

JSR_75_PACKAGES = \
    com.sun.midp.jsr075

ifeq ($(USE_JSR_75_PIM), true)
JSR_75_PACKAGES += \
    com.sun.j2me.pim \
    com.sun.j2me.pim.formats \
    javax.microedition.pim
endif

ifeq ($(USE_JSR_75_FC), true)
JSR_75_PACKAGES += \
    com.sun.cdc.io.j2me.file \
    com.sun.midp.io.j2me.file \
    javax.microedition.io.file
endif

JAVADOC_ALL_SOURCEPATH += $(JSR_75_SOURCEPATH)
JAVADOC_ALL_PACKAGES +=  $(JSR_75_PACKAGES)

GROUP_DOC_ALL += \
        -group "JSR75 FileConnection and PIM" \
	$(shell echo $(JSR_75_PACKAGES) | tr ' ' $(PATHSEP))

# Include JSR75 common properties in Configuration
#
ifeq ($(USE_JSR_75_FC), true)
JSR_75_PROPERTY_FILES += \
    $(JSR_75_CLDC_APP_DIR)/config/share/properties_jsr75_fc.xml
endif

ifeq ($(USE_JSR_75_PIM), true)
JSR_75_PROPERTY_FILES += \
    $(JSR_75_CLDC_APP_DIR)/config/share/properties_jsr75_pim.xml
endif

# Include JSR75 common constants
#    
INT_XML_FILES += \
    $(JSR_75_CLDC_APP_DIR)/config/share/constants_jsr75.xml


# Platform-independent definitions.
# Include all supported PIM handler implementations.
#
ifeq ($(USE_JSR_75_PIM), true)
ROMGEN_CFG_FILES += jsr75_rom_$(JSR_75_PIM_HANDLER_IMPL).cfg
endif


# Platform definitions
#
include $(JSR_75_DIR)/build/cldc_application/$(PLATFORM).gmk


MODULE_JSR_75_FC_EXTRA_JAVA_FILES = \
    $(JSR_75_CLDC_APP_DIR)/classes/share/javax/microedition/io/file/FileSystemEventHandlerBase.java


# Determines what option we have made and set it
# to some variable that global makefile recognize
#
SUBSYSTEM_JSR_75_JAVA_FILES += \
    $(JSR_75_CLDC_APP_DIR)/classes/share/com/sun/midp/jsr075/Initializer.java

ifeq ($(USE_JSR_75_FC), true)
SUBSYSTEM_JSR_75_JAVA_FILES += \
    $(MODULE_JSR_75_FC_EXTRA_JAVA_FILES)
endif

# I3 test files
#
# Note that the test case classes must be named to begin with 'Test'.
ifeq ($(USE_I3_TEST), true)
JSR_75_TEST_DIR = $(JSR_75_DIR)/test/cldc_application/i3test

ifeq ($(USE_JSR_75_FC), true)
SUBSYSTEM_JSR_75_I3TEST_JAVA_FILES += \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5056207.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5062564.java \
    $(JSR_75_TEST_DIR)/regression/src/fc/TestCaseSetFileConnection.java
endif

ifeq ($(USE_JSR_75_PIM), true)
SUBSYSTEM_JSR_75_I3TEST_JAVA_FILES += \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5007807.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5014161.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5016739.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5016759.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5016791.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5016792.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5017780.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5024201.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5051862.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5056166.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5056277.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5062626.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5066456.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5066511.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5066513.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5071542.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5073235.java \
    $(JSR_75_TEST_DIR)/regression/src/TestCaseBug5073286.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/AbstractAttributesTestCase.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/TestAttributes.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/TestCreate.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/TestLineReader.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/TestMarkableInputStream.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/TestReportedBugs.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/TestStressMultiThread.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/formats/TestBase64Encoding.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/formats/TestFormatSupport.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/formats/TestQuotedPrintableEncoding.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/formats/TestVCalendar10.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/formats/TestVCard21.java \
    $(JSR_75_TEST_DIR)/com/sun/j2me/pim/formats/TestVCard30.java
endif
endif

# Common native files for JSR75 subsystem
#
SUBSYSTEM_JSR_75_NATIVE_FILES += \
    jsr75_initializer_kni.c

ifeq ($(USE_JSR_75_FC), true)
SUBSYSTEM_JSR_75_NATIVE_FILES += \
    midpFileConnection.c \
    fcCleanup.c \
    fcNotifyIsolates.c
endif

ifeq ($(USE_JSR_75_PIM), true)
ifeq ($(JSR_75_PIM_HANDLER_IMPL), platform)
JPP_DEFS += -DNATIVE_PIM

SUBSYSTEM_JSR_75_NATIVE_FILES += \
    pimCleanup.c
endif
endif

SUBSYSTEM_JSR_75_EXTRA_INCLUDES += \
    -I$(JSR_75_CLDC_APP_DIR)/native/share/inc \
    -I$(JSR_75_CLDC_APP_DIR)/native/share

# vpath for JSR75 module
#
vpath % $(JSR_75_CLDC_APP_DIR)/native/share

SUBSYSTEM_CONFIGURATION_INPUT_FILES += $(JSR_75_PROPERTY_FILES)

# Specify romizer configuration file for the JSR
# and path where the file is located
#
ROMGEN_INCLUDE_PATHS += $(JSR_75_CLDC_APP_DIR)/config/share
ROMGEN_CFG_FILES     += jsr75_rom.cfg

# Append JSR75 source bundle creation to target
source_bundle:: jsr_75_source_bundle

# Create JSR75 source in subdir 'jsr75/'
JSR_75_SOURCE_OUTPUT_DIR=$(SOURCE_OUTPUT_DIR)/jsr75

# Copy and filter JSR75 source in JSR_75_SOURCE_OUTPUT_DIR
jsr_75_source_bundle: JSR_75_DIR SOURCE_OUTPUT_DIR
	@echo " ... JSR 75 source bundle" $(LOG)
	$(AT)$(call source_bundle_filter,$(JSR_75_DIR),$(JSR_75_SOURCE_OUTPUT_DIR),src/cldc_application src/share build/cldc_application build/share )

all:: jsr_75_all

# We have to create 'pimdb' directory because it is used as file root by PIM.
# We also create 'storage' directory that can be useful as storage that 
# always exists. Moreover we create a directory that stores all private 
# work directories of MIDlet suites.
jsr_75_all:
	@mkdir -p $(MIDP_OUTPUT_DIR)/appdb/pimdb
	@mkdir -p $(MIDP_OUTPUT_DIR)/appdb/storage
	@mkdir -p $(MIDP_OUTPUT_DIR)/appdb/private

EXTRA_CFLAGS += -DENABLE_JSR_75=1
