/**
 * Copyright (c) 2004-2008 Blue Whale Systems Ltd. All Rights Reserved. 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER 
 *  
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License version 
 * 2 only, as published by the Free Software Foundation.  
 *  
 * This software is provided "as is," and the copyright holder makes no representations or warranties, express or
 * implied, including but not limited to warranties of merchantability or fitness for any particular purpose or that the
 * use of this software or documentation will not infringe any third party patents, copyrights, trademarks or other
 * rights.
 * 
 * The copyright holder will not be liable for any direct, indirect special or consequential damages arising out of any
 * use of this software or documentation.
 * 
 * See the GNU  General Public License version 2 for more details 
 * (a copy is included at /legal/license.txt).  
 *  
 * You should have received a copy of the GNU General Public License 
 * version 2 along with this work; if not, write to the Free Software 
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 
 * 02110-1301 USA  
 *  
 * Please contact Blue Whale Systems Ltd, Suite 123, The LightBox
 * 111 Power Road, Chiswick, London, W4 5PY, United Kingdom or visit 
 * www.bluewhalesystems.com if you need additional 
 * information or have any questions.  
 */ 

MACRO __DONT_USE_IN_CODE__MMP_ONLY__UIQ_V3_FP0__

// Specify the file generated by the project
TARGET			BlueWhalePlatform.exe
// UID1 - System level identifier.
TARGETTYPE		EXE

// UID specify UID2 and UID3 for the project.
// UID2 - Can be thought of as an interface identifier.
// UID3 - Can be thought of as a project identifier.
// For more information about UID see "How to use UIDs" section 
// in the SDK documentation. 
// The UID3 is also specified in BlueWhalePlatform_reg.rss, BlueWhalePlatformGlobals.h
// and the .pkg files.
// For all SDK examples test range UID is used (>0x8000000), these will not 
// work in released products.
UID				0x100039CE 0x2000E27A

VENDORID        0
CAPABILITY     NetworkServices ReadUserData WriteUserData ReadDeviceData WriteDeviceData 
epocstacksize 0x5000

OPTION GCCE -O2 -fno-unit-at-a-time

// SOURCEPATH - Define the location of the project and its work files
SOURCEPATH		..\res_uiqv3fp0 

// Specifies how a resource file should be compiled
// TARGETPATH - Define the directory where the resource should be built into.
// HEADER - Tells the resource compiler to produce a file
// \epoc32\include\<appname>.rsg, which defines macro constants through which
// C++ programs can refer to resource structures.
// LANG - Indicate languages code for the project. The default language code is SC.
START RESOURCE 	BlueWhalePlatform.rss
HEADER
TARGETPATH 		\Resource\Apps
LANG			SC
END

// Application must provide a registration file, which gives 
// non-localisable information. 
// TARGETPATH - All registration files in the system shall be located in the 
// same path, this due to security reasons. On the emulator, all registration 
// files should be located in \private\10003a3f\apps. For applications 
// installed onto a phone using the standard software installation method, 
// their registration files should be installed into 
// \private\10003a3f\import\apps, but that is defined in the pkg file.
START RESOURCE	BlueWhalePlatform_reg.rss
TARGETPATH		\private\10003a3f\apps
END

// This file defines the application's captions and the name of the icon file
// TARGETPATH - Define the directory where the resource should be built into.
// LANG - Indicate languages code for the project. The default language code is SC.
START RESOURCE	BlueWhalePlatform_loc.rss
TARGETPATH		\Resource\Apps
LANG			SC
END

// SOURCEPATH - Define the location of the project and its work files
// USERINCLUDE - Define directories to be scanned for files specified in 
// #include statements in source and resource files.
SOURCEPATH		..\src
SOURCE			BlueWhalePlatformApplication.cpp
SOURCE			BlueWhalePlatformDocument.cpp
SOURCE			BlueWhalePlatformAppUi.cpp
SOURCE			BlueWhalePlatform.cpp

USERINCLUDE     ..\inc ..\..\BlueWhaleFactory\PlatformVM\inc ..\..\BlueWhaleFactory\Util\inc
USERINCLUDE 	..\..\BlueWhaleFactory\Timer ..\..\BlueWhaleFactory\StateMachine
USERINCLUDE		..\..\BlueWhaleFactory\UserInterface\inc ..\..\BlueWhaleFactory\Transport\inc
USERINCLUDE		..\..\BlueWhaleFactory\Logger

// SYSTEMINCLUDE - Define directories to be scanned for files specified in 
// #include statements in source and resource files.
SYSTEMINCLUDE	\EPOC32\INCLUDE

// Specifies import libraries
LIBRARY			euser.lib 
LIBRARY			apparc.lib 
LIBRARY			cone.lib 
LIBRARY			eikcore.lib 
LIBRARY			eikcoctl.lib 
LIBRARY			qikcore.lib
LIBRARY			hal.lib
LIBRARY			ws32.lib
LIBRARY			efsrv.lib
LIBRARY			bafl.lib
LIBRARY			BlueWhaleFactory.lib

// New heap allocator, which is more effective in out of memory situations.
// You only need to include the libs in the mmp file to use the new heap allocator.
STATICLIBRARY	qikalloc.lib
LIBRARY			qikallocdll.lib

// This section has bitmaps for application icons.
// Specifies how to compile bitmap (.bmp) files into a Symbian OS 
// format multi-bitmap (.mbm) file. 
// Different sizes of source bitmap should be supplied. The OS selects the 
// most appropriate icon size for the UI's current zoom state. This avoids the 
// need for the icon to be dynamically scaled when it is drawn at a different size. 
// For each image, an image bitmap and a mask bitmap are needed. The mask 
// should be black for the parts of the image that should be visible, and white
// for the transparent areas.
// For more information about UID see "Defining application icons, captions 
// and properties" section in the SDK documentation. 
START BITMAP	BlueWhalePlatformAppIcon.mbm
HEADER
TARGETPATH		\Resource\Apps
SOURCEPATH		..\images
// Source Color-depth Source-bitmap-list
// c denotes whether the bitmap is a colour bitmap and the digits represent the
// colour-depth of the bitmap and the bitmap mask respectively
SOURCE	c24		BlueWhalePlatform_Small.bmp
SOURCE	8		BlueWhalePlatform_Small_mask.bmp
SOURCE	c24		BlueWhalePlatform_Large.bmp
SOURCE	8		BlueWhalePlatform_Large_mask.bmp
SOURCE	c24		BlueWhalePlatform_xLarge.bmp
SOURCE	8		BlueWhalePlatform_xLarge_mask.bmp
END

#ifdef ENABLE_ABIV2_MODE
  DEBUGGABLE
#endif
